name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test_secret_repository
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform
  validate:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      - name: validate_terraform
        run: |
          terraform --version
          sed -i s,#access_key#,${{ secrets.ACCESS_KEY }},g main.tf
          sed -i s,#secret_key#,${{ secrets.SECRET_KEY }},g main.tf
          sed -i s,#region#,${{ secrets.REGION }},g main.tf
          sed -i s,#region#,${{ secrets.REGION }},g ./tfvars/prod.tfvars
          sed -i s,#cluster_name#,${{ secrets.cluster_name }},g ./tfvars/prod.tfvars
          sed -i s,#node_group_name#,${{ secrets.NODE_GROUP_NAME }},g ./tfvars/prod.tfvars
          sed -i s,#subnet_01#,${{ secrets.SUBNET_01 }},g ./tfvars/prod.tfvars
          sed -i s,#subnet_02#,${{ secrets.SUBNET_02 }},g ./tfvars/prod.tfvars
          terraform init
          terraform plan -var-file=./tfvars/prod.tfvars